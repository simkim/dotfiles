# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# upgrade to 256color version

case "$TERM" in
    xterm) export TERM=xterm-256color;;
    screen) export TERM=screen-256color;;
esac

BASE03=$(tput setaf 234)
BASE02=$(tput setaf 235)
BASE01=$(tput setaf 240)
BASE00=$(tput setaf 241)
BASE0=$(tput setaf 244)
BASE1=$(tput setaf 245)
BASE2=$(tput setaf 254)
BASE3=$(tput setaf 230)
YELLOW=$(tput setaf 136)
ORANGE=$(tput setaf 166)
RED=$(tput setaf 160)
MAGENTA=$(tput setaf 125)
VIOLET=$(tput setaf 61)
BLUE=$(tput setaf 33)
CYAN=$(tput setaf 37)
GREEN=$(tput setaf 64) 
BOLD=$(tput bold)
RESET=$(tput sgr0) 

parse_git_dirty () {
    [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

parse_git_branch () {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
} 

PS1="\[$ORANGE\]\h\[$BASE0\]:\[$BLUE\]\w\[$BASE0\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \"\[$BOLD\]  \")\[$YELLOW\]\$(parse_git_branch)\[$BASE0\]\$ \[$RESET\]"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Alias definitions.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Customisation 

if [ -e /opt/ros/hydro/setup.bash ]; then
    source /opt/ros/hydro/setup.bash
fi

export EDITOR=vim
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

#set -o vi

bind C-l:clear-screen

# https://github.com/tejr/dotfiles/blob/master/bash/bashrc

# Keep around a million lines of history in file
HISTFILESIZE=$((2 ** 20))

# Keep around a thousand lines of history in memory
HISTSIZE=$((2 ** 10))

# Ignore duplicate commands and whitespace in history
HISTCONTROL=ignoreboth

# Keep the times of the commands in history
HISTTIMEFORMAT='%F %T '

# Don't warn me about new mail
unset -v MAILCHECK

# Never beep at me
setterm -bfreq -blength 2>/dev/null

# Turn off flow control and control character echo
stty -ixon -ctlecho 2>/dev/null

# Don't let anyone write(1) to my terminal
mesg n

# Update columns and rows if window size changes
shopt -s checkwinsize

# Put multi-line commands onto one line of history
shopt -s cmdhist

# Don't use PATH to find files to source
shopt -u sourcepath

if [ -e ~/.Xressources ] ; then
    xrdb -merge ~/.Xressources
fi

if [ -e /usr/share/autojump/autojump.sh ]; then
    .  /usr/share/autojump/autojump.sh
fi

# Load any supplementary scripts
if [[ -d $HOME/.bashrc.d ]] ; then
	for config in "$HOME"/.bashrc.d/*.bash ; do
		source "$config"
		done
	fi
unset -v config
